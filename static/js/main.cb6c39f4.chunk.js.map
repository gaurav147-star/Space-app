{"version":3,"sources":["../assets sync /^/.*/.png$","../assets/Earth.png","../assets/Jupiter.png","../assets/Mars.png","../assets/Mercury.png","../assets/Neptune.png","../assets/Saturn.png","../assets/Uranus.png","../assets/Venus.png","components/iss.png","components/img1.png","App.js","Isspos.js","SpacePeople.js","index.js"],"names":["map","webpackContext","req","id","webpackContextResolve","__webpack_require__","o","e","Error","code","keys","Object","resolve","module","exports","api","App","useState","data","setData","query","setQuery","console","log","className","src","img1","alt","type","placeholder","onChange","target","value","onKeyPress","evt","key","fetch","then","res","json","result","params","name","englishName","require","default","mass","massValue","massExponent","avgTemp","meanRadius","equaRadius","polarRadius","gravity","Math","floor","escape","toFixed","axialTilt","sideralRotation","sideralOrbit","density","aphelion","perihelion","moons","elem","index","moon","href","ISS_URL","img","height","SpaceStation","Map","state","center","lat","lng","zoom","getCoordinates","setState","iss_position","latitude","longitude","this","interval","setInterval","clearInterval","style","width","bootstrapURLKeys","React","Component","SpacePeople","fetchApidata","a","apiData","useEffect","people","craft","ReactDOM","render","to","exact","path","component","document","getElementById"],"mappings":"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","file":"static/js/main.cb6c39f4.chunk.js","sourcesContent":["var map = {\n\t\"./Earth.png\": 444,\n\t\"./Jupiter.png\": 445,\n\t\"./Mars.png\": 446,\n\t\"./Mercury.png\": 447,\n\t\"./Neptune.png\": 448,\n\t\"./Saturn.png\": 449,\n\t\"./Uranus.png\": 450,\n\t\"./Venus.png\": 451\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 443;","export default __webpack_public_path__ + \"static/media/Earth.3974f972.png\";","export default __webpack_public_path__ + \"static/media/Jupiter.f100a09b.png\";","export default __webpack_public_path__ + \"static/media/Mars.b5659544.png\";","export default __webpack_public_path__ + \"static/media/Mercury.2e0eeab1.png\";","export default __webpack_public_path__ + \"static/media/Neptune.5abb03f5.png\";","export default __webpack_public_path__ + \"static/media/Saturn.b1f69fbf.png\";","export default __webpack_public_path__ + \"static/media/Uranus.c045705f.png\";","export default __webpack_public_path__ + \"static/media/Venus.c1f6bcde.png\";","export default __webpack_public_path__ + \"static/media/iss.b1bbecff.png\";","export default __webpack_public_path__ + \"static/media/img1.99083fab.png\";","import React, { useState} from \"react\";\nimport './App.css';\nimport img1 from './components/img1.png';\nimport 'animate.css';\nimport Particles from 'react-particles-js';\n\nconst api = {\n  base: \"https://api.le-systeme-solaire.net/rest/bodies/\",\n};\n\nfunction App() {\n\n\n\n  const [data, setData] = useState([]);\n  const [query, setQuery] = useState('');\n\n  console.log(\"hello\");\n  // const fetchApidata = async () => {\n  //   const api = await fetch('https://api.le-systeme-solaire.net/rest/bodies/');\n  //   const apiData = await api.json();\n  //   console.log(apiData);\n  //   setData(apiData.bodies);\n  // ?key=23519497-32dcbbb5403142627fd458559&q=yellow+flowers&image_type=photo&pretty=true\n  // }\n\n  \n\n \n\n  const search = evt =>{\n\n    if(evt.key === \"Enter\"){\n  \n      fetch(`${api.base}${query}`)\n      \n\n      .then(res=>res.json())\n      .then(result =>{\n        setData(result);\n        setQuery('');\n        console.log(result);\n      });\n    }\n  }\n\n  return (\n    <>\n    \n   \n      <div className=\"main_heading\">\n  \n        <div className=\"image1\">\n        <img src={img1} alt=\"main\" />\n        </div>\n        <div className=\"image2\">\n        <img src={img1} alt=\"main\" />\n        </div>\n        <div className=\"text\">\n        <h1> Space Voyager </h1>\n        <p> Explore the space at fingertips </p>\n        </div>\n        \n      </div>\n            \n      <div className=\"searchkabox\">\n        \n        <input type=\"text\" className=\"searchbar\" placeholder=\"Enter Planet name here\"\n        onChange={e => setQuery(e.target.value)\n        }\n        value={query}\n        \n        onKeyPress={search}\n        \n        />\n      <div className=\"manualname\">\n        \n        </div>\n        \n        \n           \n        </div>\n        <Particles className=\"particle\"\n    params={{\n\t    \"particles\": {\n\t        \"number\": {\n\t            \"value\": 200,\n\t            \"density\": {\n\t                \"enable\": true\n\t            }\n\t        },\n\t        \"size\": {\n\t            \"value\": 5,\n\t            \"random\": true,\n\t            \"anim\": {\n\t                \"speed\": 4,\n\t                \"size_min\": 0.3\n\t            }\n\t        },\n\t        \"line_linked\": {\n\t            \"enable\": false\n\t        },\n\t        \"move\": {\n\t            \"random\": true,\n\t            \"speed\": 1,\n\t            \"direction\": \"top\",\n\t            \"out_mode\": \"out\"\n\t        }\n\t    },\n\t    \"interactivity\": {\n\t        \"events\": {\n\t            \"onhover\": {\n\t                \"enable\": true,\n\t                \"mode\": \"bubble\"\n\t            },\n\t            \n\t        },\n\t        \"modes\": {\n\t            \"bubble\": {\n\t                \"distance\": 250,\n\t                \"duration\": 1,\n\t                \"size\": 0,\n\t                \"opacity\": 0\n\t            },\n\t            \"repulse\": {\n\t                \"distance\": 400,\n\t                \"duration\": 4\n\t            }\n\t        }\n\t    }\n\t}} />\n  \n        {(typeof data.name != \"undefined\" ) ? (\n\n          <>\n          <div className=\"detailbox\">\n          <h2> {data.englishName} </h2>\n          </div>\n          <div className=\"planimg\">\n                  <img  src={require(\"../assets/\"+data.englishName+\".png\").default} />\n            </div>\n          \n\n          <div className=\"deepbox\">\n          \n          <h3> Mass of {data.englishName} : {data.mass.massValue} <span>&#215;</span> 10<sup>{data.mass.massExponent}</sup> kg </h3>\n          <h3> Mean Temprature of {data.englishName} : {data.avgTemp} K </h3>\n          <h3> Mean radius of {data.englishName} : {data.meanRadius} km </h3>\n          <h3>  Equitorial Radius of {data.englishName} : {data.equaRadius} km </h3>\n          <h3> Polar radius of {data.englishName} : {data.polarRadius} km </h3>\n          <h3> Surface Gravity of {data.englishName} : {data.gravity} m/s<sup>2</sup> </h3>\n          <h3> Escape Velocity of {data.englishName} : {Math.floor(data.escape/1000).toFixed(2)} km/s </h3>\n          <h3> Axial tilt of {data.englishName} : {data.axialTilt} ° </h3>\n          <h3> Rotation period of {data.englishName}: {data.sideralRotation} hrs </h3>\n          <h3> Revolution period of {data.englishName}: {data.sideralOrbit} days </h3>\n          <h3> Density of {data.englishName}: {data.density} g/cm<sup>3</sup> </h3>\n          <h3> Aphelion of {data.englishName}: {data.aphelion} km </h3>\n          <h3> Perihelion period of {data.englishName}: {data.perihelion} km </h3>\n          \n          {<h3> Moons of {data.englishName}: {data.moons.map((elem, index) =>{\n            return (<span> {elem.moon}, </span>) \n\n          })}\n          </h3> }\n          \n          </div>\n          </>\n    \n          \n\n        ):('')}\n   \n\n        <div className=\"end\">\n          <h2> Made with 💗 in React by  <a href=\"https://mohittk.github.io\"> Mohit  </a></h2>\n          </div>\n\n\n\n        \n        \n      \n    </>\n  );\n}\n\nexport default App;\n","import React from 'react';\r\nimport './isspos.css';\r\nimport GoogleMapReact from 'google-map-react'\r\n\r\nconst ISS_URL = \"https://api.open-notify.org/iss-now.json\"\r\nconst MAP_KEY = \"AIzaSyDjx71MZXvkmArFrs3V89raHMPfsi2Wn9o\"\r\nconst img = <img src={require(\"./components/iss.png\").default}  alt = \"ISS\" height = \"30px\"/>\r\n\r\nconst SpaceStation = ({ img }) => <div>{img}</div>\r\n\r\n\r\nclass Map extends React.Component{\r\n    state = {\r\n        center: {\r\n            lat: 0,\r\n            lng: 0\r\n        },\r\n        zoom: 1\r\n    }\r\n\r\n    componentDidMount(){\r\n        this.getCoordinates()\r\n        this.interval = setInterval(this.getCoordinates, 3000)\r\n    }\r\n\r\n    componentWillUnmount(){\r\n        clearInterval(this.interval)\r\n    }\r\n\r\n    getCoordinates = () => {\r\n        fetch(ISS_URL)\r\n            .then(res => res.json())\r\n            .then(data => this.setState({\r\n                center: {\r\n                    lat: data.iss_position.latitude,\r\n                    lng: data.iss_position.longitude\r\n                }\r\n            }))\r\n    }\r\n\r\n    render(){\r\n        console.log(\"LAT:\", this.state.center.lat)\r\n        console.log(\"LNG:\", this.state.center.lng)\r\n        return(\r\n            <div className= \"main_iss\">\r\n                <p>Latitude: {this.state.center.lat}</p>\r\n                <p>Longitude: {this.state.center.lng}</p>\r\n                <div className = \"map\" style={{ height: '100vh', width: '100%' }}>\r\n                    <GoogleMapReact className = \"map\"\r\n                        bootstrapURLKeys={{key: MAP_KEY }}\r\n                        center={this.state.center}\r\n                        zoom={this.state.zoom}\r\n                    >\r\n                    <SpaceStation\r\n\r\n                        lat = {this.state.center.lat}\r\n                        lng = {this.state.center.lng}\r\n                        img = {img}\r\n                    />\r\n                    </GoogleMapReact>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Map;\r\n\r\n\r\n// import Map from './components/Map'\r\n// import './App.css';\r\n// import { useState, useEffect } from 'react'\r\n// import axios from 'axios'\r\n\r\n// function IssPos() {\r\n  \r\n//   const [loading, setLoading] = useState(true);\r\n//   const [longitude, setLongitude] = useState([]);\r\n//   const [latitude, setLatitude] = useState([]);\r\n//   const [toggle, setToggle] = useState(false);\r\n\r\n//   const getLocation = async () => {\r\n    \r\n//     const res = await axios.get('http://api.open-notify.org/iss-now.json')\r\n   \r\n//     const { longitude, latitude } = await res.data.iss_position;\r\n//     setLongitude(parseFloat(longitude));\r\n//     setLatitude(parseFloat(latitude));\r\n    \r\n//   }\r\n \r\n\r\n//   useEffect(() =>{\r\n//       getLocation();\r\n//       setTimeout(() => setToggle((prevToggle)=> !prevToggle),3000);\r\n//   },[toggle]);\r\n\r\n//   return (\r\n\r\n//     <div className=\"App\">\r\n       \r\n//       {(<Map center={{ lat: latitude, lng: longitude }} />)  }\r\n//     </div>\r\n//   );\r\n// }\r\n\r\n// export default IssPos;\r\n\r\n","import React, { useState, useEffect } from 'react';\r\nimport './spapep.css';\r\nimport Particles from 'react-particles-js';\r\n\r\nconst SpacePeople = () =>{ \r\n\r\n    const [data, setData] = useState([])\r\n\r\n    const fetchApidata = async() =>{\r\n        const api = await fetch('https://api.open-notify.org/astros.json')\r\n        const apiData = await api.json();\r\n        console.log(apiData);\r\n        setData(apiData);\r\n    }\r\n\r\n    useEffect(() =>{\r\n        fetchApidata();\r\n        \r\n       \r\n    },[]);\r\n    \r\n\r\n    return (\r\n        <>\r\n        <div className=\"mainspace\">\r\n        <h1> <span className=\"blink\">🔴 </span>Introducing you the people who are currently there in Space </h1>\r\n       \r\n    \r\n        </div>\r\n        <Particles className=\"particle\"\r\n    params={{\r\n\t    \"particles\": {\r\n\t        \"number\": {\r\n\t            \"value\": 100\r\n\t        },\r\n\t        \"size\": {\r\n\t            \"value\": 4\r\n\t        }\r\n\t    },\r\n\t    \"interactivity\": {\r\n\t        \"events\": {\r\n\t            \"onhover\": {\r\n\t                \"enable\": true,\r\n\t                \"mode\": \"repulse\"\r\n\t            }\r\n\t        }\r\n\t    }\r\n\t}} />\r\n        \r\n        {\r\n            (typeof data.people != \"undefined\") ?(\r\n                <div className=\"mainspacecon\">\r\n            <h3>  {data.people.map((elem)=>{\r\n                    return(\r\n                        <>\r\n                        \r\n                        \r\n                            <h4> {elem.name}  <span> Craft Name : {elem.craft} </span> </h4>\r\n                           \r\n                    \r\n                        </>\r\n                        \r\n                    )\r\n\r\n                })} </h3>\r\n                </div>\r\n            )\r\n                : ('')\r\n            }\r\n        </>\r\n    )\r\n}\r\n\r\nexport default SpacePeople;","import React from 'react';\nimport { BrowserRouter as Router, Route, Link, Switch } from 'react-router-dom';\nimport ReactDOM from 'react-dom';\nimport './App.css';\nimport './isspos.css';\nimport App from './App';\nimport Map from './Isspos';\nimport SpacePeople from './SpacePeople';\nimport Particles from 'react-particles-js';\n\nReactDOM.render(\n  <Router>\n    <div className=\"index\">\n       \n        <Link className=\"link2\" to=\"/\"> <span>Explore The Planets </span></Link>\n        <Link className=\"link2\" to=\"/isspos\"><span>International Space Station position</span> </Link>\n        <Link className=\"link2\" to=\"/spacepeople\"> <span>Space People</span></Link>\n        <Particles className=\"particle\"\n    params={{\n\t    \"particles\": {\n\t        \"number\": {\n\t            \"value\": 100\n\t        },\n\t        \"size\": {\n\t            \"value\": 4\n\t        }\n\t    },\n\t    \"interactivity\": {\n\t        \"events\": {\n\t            \"onhover\": {\n\t                \"enable\": true,\n\t                \"mode\": \"repulse\"\n\t            }\n\t        }\n\t    }\n\t}} />\n  <h1 className=\"index_main\"> Welcome to the Space-App </h1>\n        \n\n\n        <Switch>\n        <Route exact path='/' component={App}></Route>\n        <Route exact path='/isspos' component={Map}></Route>\n        <Route exact path='/spacepeople' component={SpacePeople}></Route>\n        </Switch>\n        </div>\n  </Router> \n  ,\n  document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}